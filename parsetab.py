
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSALORS AND DIVIDE EG EQUALS INF INFEG LPAREN MINUS NAME NEG NUMBER OR PLUS RPAREN SEMICOLON SI SINON SUP SUPEG TIMESstatement : NAME EQUALS expressionstatement : expression\n                 | expression SEMICOLON statement\n                 | expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression EQUALS expressionexpression : expression SUP expression\n                  | expression INF expression\n                  | expression SUPEG expression\n                  | expression INFEG expression\n                  | expression EG expression\n                  | expression NEG expression\n                  | expression OR expression\n                  | expression AND expressionexpression : expression SI expression\n                  | expression ALORS expression\n                  | expression SINON expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'EQUALS':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[7,-23,10,-24,10,-21,10,-22,10,10,10,10,-7,10,-6,10,10,10,-8,10,10,-5,10,10,]),'INF':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,11,-24,11,-21,11,-22,11,11,11,11,-7,11,-6,11,11,11,-8,11,11,-5,11,11,]),'SUP':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,12,-24,12,-21,12,-22,12,12,12,12,-7,12,-6,12,12,12,-8,12,12,-5,12,12,]),'ALORS':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,17,-24,17,-21,17,-22,17,17,17,17,-7,17,-6,17,17,17,-8,17,17,-5,17,17,]),'NAME':([0,3,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,8,8,8,8,8,]),'LPAREN':([0,3,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'INFEG':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,18,-24,18,-21,18,-22,18,18,18,18,-7,18,-6,18,18,18,-8,18,18,-5,18,18,]),'OR':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,19,-24,19,-21,19,-22,19,19,19,19,-7,19,-6,19,19,19,-8,19,19,-5,19,19,]),'SEMICOLON':([2,4,5,8,27,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,21,-24,-21,-22,-9,-11,-10,-15,-7,-18,-6,-19,-13,-16,-8,-20,-12,-5,-14,-17,]),'NUMBER':([0,3,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'PLUS':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,24,-24,24,-21,24,-22,24,24,24,24,-7,24,-6,24,24,24,-8,24,24,-5,24,24,]),'RPAREN':([4,8,9,27,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-23,-24,29,-21,-22,-9,-11,-10,-15,-7,-18,-6,-19,-13,-16,-8,-20,-12,-5,-14,-17,]),'AND':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,26,-24,26,-21,26,-22,26,26,26,26,-7,26,-6,26,26,26,-8,26,26,-5,26,26,]),'TIMES':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,14,-24,14,-21,14,-22,14,14,14,14,-7,14,14,14,14,14,-8,14,14,14,14,14,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[6,-24,6,-23,16,6,6,-24,16,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-21,16,-22,16,16,16,16,-7,16,-6,16,16,16,-8,16,16,-5,16,16,]),'SI':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,15,-24,15,-21,15,-22,15,15,15,15,-7,15,-6,15,15,15,-8,15,15,-5,15,15,]),'DIVIDE':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,20,-24,20,-21,20,-22,20,20,20,20,-7,20,20,20,20,20,-8,20,20,20,20,20,]),'SINON':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,22,-24,22,-21,22,-22,22,22,22,22,-7,22,-6,22,22,22,-8,22,22,-5,22,22,]),'SUPEG':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,23,-24,23,-21,23,-22,23,23,23,23,-7,23,-6,23,23,23,-8,23,23,-5,23,23,]),'EG':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,25,-24,25,-21,25,-22,25,25,25,25,-7,25,-6,25,25,25,-8,25,25,-5,25,25,]),'$end':([0,1,2,4,5,8,21,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-4,0,-24,-23,-2,-24,-4,-21,-1,-22,-9,-11,-10,-15,-7,-18,-6,-19,-13,-16,-8,-3,-20,-12,-5,-14,-17,]),'NEG':([2,4,5,8,9,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,],[-24,-23,13,-24,13,-21,13,-22,13,13,13,13,-7,13,-6,13,13,13,-8,13,13,-5,13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,21,],[1,41,]),'expression':([0,3,6,7,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[5,9,27,28,30,31,32,33,34,35,36,37,38,39,40,5,42,43,44,45,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',75),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',81),
  ('statement -> expression SEMICOLON statement','statement',3,'p_statement_expr','calc.py',82),
  ('statement -> <empty>','statement',0,'p_statement_expr','calc.py',83),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',93),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',94),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',95),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',96),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_aff','calc.py',118),
  ('expression -> expression SUP expression','expression',3,'p_expression_bool','calc.py',123),
  ('expression -> expression INF expression','expression',3,'p_expression_bool','calc.py',124),
  ('expression -> expression SUPEG expression','expression',3,'p_expression_bool','calc.py',125),
  ('expression -> expression INFEG expression','expression',3,'p_expression_bool','calc.py',126),
  ('expression -> expression EG expression','expression',3,'p_expression_bool','calc.py',127),
  ('expression -> expression NEG expression','expression',3,'p_expression_bool','calc.py',128),
  ('expression -> expression OR expression','expression',3,'p_expression_bool','calc.py',129),
  ('expression -> expression AND expression','expression',3,'p_expression_bool','calc.py',130),
  ('expression -> expression SI expression','expression',3,'p_statement_cond','calc.py',165),
  ('expression -> expression ALORS expression','expression',3,'p_statement_cond','calc.py',166),
  ('expression -> expression SINON expression','expression',3,'p_statement_cond','calc.py',167),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',174),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',178),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',182),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',186),
]
