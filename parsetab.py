
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSALORS AND DIVIDE EG EQUALS INF INFEG LPAREN MINUS NAME NEG NUMBER OR PLUS RPAREN SEMICOLON SI SINON SUP SUPEG TIMESstatement : NAME EQUALS expressionstatement : expression\n                 | expression SEMICOLON statement\n                 | expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression EQUALS expressionexpression : expression SUP expression\n                  | expression INF expression\n                  | expression SUPEG expression\n                  | expression INFEG expression\n                  | expression EG expression\n                  | expression NEG expression\n                  | expression OR expression\n                  | expression AND expressionexpression : expression SI expression\n                  | expression ALORS expression\n                  | expression SINON expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[2,26,26,26,2,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([0,1,2,3,6,8,25,26,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-4,0,-24,-2,-23,-4,-21,-24,-1,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[4,-24,10,4,4,-23,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-21,-24,10,10,-5,-6,-7,-8,10,10,10,10,10,10,10,10,10,10,10,10,-22,]),'LPAREN':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQUALS':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[7,13,-23,-21,-24,13,13,-5,-6,-7,-8,13,13,13,13,13,13,13,13,13,13,13,13,-22,]),'SEMICOLON':([2,3,6,25,26,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,8,-23,-21,-24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,]),'PLUS':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,9,-23,-21,-24,9,9,-5,-6,-7,-8,9,9,9,9,9,9,9,9,9,9,9,9,-22,]),'TIMES':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,11,-23,-21,-24,11,11,11,11,-7,-8,11,11,11,11,11,11,11,11,11,11,11,11,-22,]),'DIVIDE':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,12,-23,-21,-24,12,12,12,12,-7,-8,12,12,12,12,12,12,12,12,12,12,12,12,-22,]),'SUP':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,14,-23,-21,-24,14,14,-5,-6,-7,-8,14,14,14,14,14,14,14,14,14,14,14,14,-22,]),'INF':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,15,-23,-21,-24,15,15,-5,-6,-7,-8,15,15,15,15,15,15,15,15,15,15,15,15,-22,]),'SUPEG':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,16,-23,-21,-24,16,16,-5,-6,-7,-8,16,16,16,16,16,16,16,16,16,16,16,16,-22,]),'INFEG':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,17,-23,-21,-24,17,17,-5,-6,-7,-8,17,17,17,17,17,17,17,17,17,17,17,17,-22,]),'EG':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,18,-23,-21,-24,18,18,-5,-6,-7,-8,18,18,18,18,18,18,18,18,18,18,18,18,-22,]),'NEG':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,19,-23,-21,-24,19,19,-5,-6,-7,-8,19,19,19,19,19,19,19,19,19,19,19,19,-22,]),'OR':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,20,-23,-21,-24,20,20,-5,-6,-7,-8,20,20,20,20,20,20,20,20,20,20,20,20,-22,]),'AND':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,21,-23,-21,-24,21,21,-5,-6,-7,-8,21,21,21,21,21,21,21,21,21,21,21,21,-22,]),'SI':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,22,-23,-21,-24,22,22,-5,-6,-7,-8,22,22,22,22,22,22,22,22,22,22,22,22,-22,]),'ALORS':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,23,-23,-21,-24,23,23,-5,-6,-7,-8,23,23,23,23,23,23,23,23,23,23,23,23,-22,]),'SINON':([2,3,6,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-24,24,-23,-21,-24,24,24,-5,-6,-7,-8,24,24,24,24,24,24,24,24,24,24,24,24,-22,]),'RPAREN':([6,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,],[-23,-21,-24,46,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,8,],[1,29,]),'expression':([0,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,],[3,25,27,28,3,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',72),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',76),
  ('statement -> expression SEMICOLON statement','statement',3,'p_statement_expr','calc.py',77),
  ('statement -> <empty>','statement',0,'p_statement_expr','calc.py',78),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',86),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',87),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',88),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',89),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_aff','calc.py',108),
  ('expression -> expression SUP expression','expression',3,'p_expression_bool','calc.py',113),
  ('expression -> expression INF expression','expression',3,'p_expression_bool','calc.py',114),
  ('expression -> expression SUPEG expression','expression',3,'p_expression_bool','calc.py',115),
  ('expression -> expression INFEG expression','expression',3,'p_expression_bool','calc.py',116),
  ('expression -> expression EG expression','expression',3,'p_expression_bool','calc.py',117),
  ('expression -> expression NEG expression','expression',3,'p_expression_bool','calc.py',118),
  ('expression -> expression OR expression','expression',3,'p_expression_bool','calc.py',119),
  ('expression -> expression AND expression','expression',3,'p_expression_bool','calc.py',120),
  ('expression -> expression SI expression','expression',3,'p_statement_cond','calc.py',155),
  ('expression -> expression ALORS expression','expression',3,'p_statement_cond','calc.py',156),
  ('expression -> expression SINON expression','expression',3,'p_statement_cond','calc.py',157),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',165),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',169),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',173),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',177),
]
